swagger: "2.0"
info:
  description: voice.over.ai hackathon backend
  version: "1.0.0"
  title: Swagger Rest Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

paths:

  /ping:
    get:
      operationId: api.ping
      summary: Gets a ping response.
      description: |
        Gets a ping response. The response is a JSON object that contains the server time.
      # no security required here
      security: []
      responses:
        '200':
          description: Ping reponse.
          schema:
            type: object
            properties:
              result:
                type: string
              datetime:
                type: string
                format: date-time

  /analyzeCallFrame:
    get:
      operationId: api.analyzeCallFrame
      responses:
        '200':
          description: Call frame.
          schema:
            $ref: '#/definitions/CallFrame'

  /calls:
    get:
      operationId: api.getCalls
      responses:
        '200':
          description: Calls array.
          schema:
            type: array
            readOnly: true
            minItems: 0
            maxItems: 1000
            items:
              $ref: '#/definitions/Call'

  /calls/{callId}:
    get:
      operationId: api.getCall
      parameters:
        - name: callId
          in: path
          type: string
          required: True
      responses:
        '200':
          description: Call object.
          schema:
            $ref: '#/definitions/Call'

  /employees:
    get:
      operationId: api.getEmployees
      responses:
        '200':
          description: Employees array.
          schema:
            type: array
            readOnly: true
            minItems: 0
            maxItems: 1000
            items:
              $ref: '#/definitions/Employee'


  /employees/{employeeId}:
    get:
      operationId: api.getEmployee
      parameters:
        - name: employeeId
          in: path
          type: string
          required: True
      responses:
        '200':
          description: Employee object.
          schema:
            $ref: '#/definitions/Employee'

  /company:
    get:
      operationId: api.getCompany
      responses:
        '200':
          description: Company object.
          schema:
            $ref: '#/definitions/Company'

definitions:

  Statistics:
    type: object
    properties:
      totalFrames:
        type: integer
      genderMale:
        type: integer
      genderFemale:
        type: integer
      emotionCalm:
        type: integer
      emotionHappy:
        type: integer
      emotionSad:
        type: integer
      emotionAngry:
        type: integer
      emotionFearful:
        type: integer
      emotionNeutral:
        type: integer
      conversationTopic_informationQuery:
        type: integer
      conversationTopic_pickupCollection:
        type: integer
      conversationTopic_delivery:
        type: integer
      typeBusiness:
        type: integer
      typePrivate:
        type: integer
      satisfactionSatisfied:
        type: integer
      satisfactionUnsatisfied:
        type: integer
      satisfactionNeutral:
        type: integer
      kindnessKind:
        type: integer
      kindnessUnkind:
        type: integer
      kindnessNeutral:
        type: integer

  CallFrame:
    type: object
    example: |
      {
        "gender": "male",
        "emotion": "calm",
        "conversationTopic_informationQuery": false,
        "conversationTopic_pickupCollection": true,
        "conversationTopic_delivery": false,
        "type": "business",
        "satisfaction": "satisfied"
        "kindness": "unkind",
      }
    properties:
      gender:
        type: string
        enum:
          - male
          - female
      emotion:
        type: string
        enum:
          - calm
          - happy
          - sad
          - angry
          - fearful
          - neutral
      conversationTopic_informationQuery:
        type: boolean
      conversationTopic_pickupCollection:
        type: boolean
      conversationTopic_delivery:
        type: boolean
      type:
        type: string
        enum:
          - none
          - business
          - private
      satisfaction:
        type: string
        enum:
          - satisfied
          - unsatisfied
          - neutral
      kindness:
        type: string
        enum:
          - kind
          - unkind
          - neutral

  CallMetrics:
    type: object

  CallAnalysis:
    type: object
    properties:
      gender:
        type: string
        enum:
          - male
          - female
      emotion:
        type: string
        enum:
          - calm
          - happy
          - sad
          - angry
          - fearful
          - neutral
      conversationTopic_informationQuery:
        type: boolean
      conversationTopic_pickupCollection:
        type: boolean
      conversationTopic_delivery:
        type: boolean
      type:
        type: string
        enum:
          - business
          - private
      satisfaction:
        type: string
        enum:
          - satisfied
          - unsatisfied
          - neutral
      kindness:
        type: string
        enum:
          - kind
          - unkind
          - neutral

  Call:
    type: object
    properties:
      datetime:
        type: string
        format: date-time
      length:
        type: integer
        minimum: 0
      timeline:
        type: array
        readOnly: true
        minItems: 0
        maxItems: 10000
        items:
          $ref: '#/definitions/CallFrame'
      analysis:
        $ref: '#/definitions/CallAnalysis'
      statistics:
        $ref: '#/definitions/Statistics'

  Employee:
    type: object
    properties:
      callIds:
        type: array
        readOnly: true
        minItems: 0
        maxItems: 1000
        items:
          type: string
      name:
        type: string
      picture:
        type: string
      lengthAverage:
        type: integer
        minimum: 0
      statistics:
        $ref: '#/definitions/Statistics'

  Company:
    type: object
    properties:
      topFiveEmployeeIds:
        type: array
        readOnly: true
        minItems: 0
        maxItems: 5
        items:
          type: string
      bottomFiveEmployeeIds:
        type: array
        readOnly: true
        minItems: 0
        maxItems: 5
        items:
          type: string
      employeeIds:
        type: array
        readOnly: true
        minItems: 0
        maxItems: 1000
        items:
          type: string
      lengthAverage:
        type: integer
        minimum: 0
      statistics:
        $ref: '#/definitions/Statistics'
